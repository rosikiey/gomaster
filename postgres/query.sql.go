// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package postgres

import (
	"context"
)

const gettodo = `-- name: Gettodo :many
SELECT id, name, completed FROM todos
`

func (q *Queries) Gettodo(ctx context.Context) ([]Todo, error) {
	rows, err := q.query(ctx, q.gettodoStmt, gettodo)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Todo
	for rows.Next() {
		var i Todo
		if err := rows.Scan(&i.ID, &i.Name, &i.Completed); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const gettodosinggle = `-- name: Gettodosinggle :one
SELECT id, name, completed FROM todos where limits = 1
`

func (q *Queries) Gettodosinggle(ctx context.Context) (Todo, error) {
	row := q.queryRow(ctx, q.gettodosinggleStmt, gettodosinggle)
	var i Todo
	err := row.Scan(&i.ID, &i.Name, &i.Completed)
	return i, err
}
